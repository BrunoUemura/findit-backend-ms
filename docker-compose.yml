version: "3.8"

services:
  rabbitmq:
    image: "rabbitmq:3.8-management-alpine"
    container_name: findit-rabbitmq
    hostname: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - "./data/.rabbitmq_data:/var/lib/rabbitmq/mnesia"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - production-network

  api-gateway:
    build: ./ms-api-gateway
    entrypoint: ./.docker/entrypoint.sh
    container_name: api-gateway
    networks:
      - production-network
    ports:
      - "8080:8080"

  postgres-auth:
    image: postgres:latest
    container_name: postgres-auth
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: findit_auth
    ports:
      - "5432:5432"
    volumes:
      - ./data/pgdata_auth:/var/lib/postgresql/data
    networks:
      - production-network

  redis-auth:
    image: redis:latest
    container_name: redis-auth
    command: redis-server --requirepass RedisFindit
    ports:
      - "6379:6379"
    networks:
      - production-network

  ms-auth:
    build: ./ms-auth
    entrypoint: ./.docker/entrypoint.sh
    container_name: ms-auth
    depends_on:
      - postgres-auth
      - redis-auth
    restart: always
    networks:
      - production-network
    ports:
      - "4000:4000"

  postgres-users:
    image: postgres:latest
    container_name: postgres-users
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: findit_user
    ports:
      - "15432:5432"
    volumes:
      - ./data/pgdata_users:/var/lib/postgresql/data
    networks:
      - production-network

  ms-users:
    build: ./ms-users
    entrypoint: ./.docker/entrypoint.sh
    container_name: ms-users
    depends_on:
      - postgres-users
    restart: always
    networks:
      - production-network
    ports:
      - "4001:4001"
    volumes:
      - ./ms-users/src/uploads:/usr/app/src/uploads

  postgres-services:
    image: postgres:latest
    container_name: postgres-services
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: findit_service
    ports:
      - "25432:5432"
    volumes:
      - ./data/pgdata_services:/var/lib/postgresql/data
    networks:
      - production-network

  ms-services:
    build: ./ms-services
    entrypoint: ./.docker/entrypoint.sh
    container_name: ms-services
    depends_on:
      - postgres-services
    restart: always
    networks:
      - production-network
    ports:
      - "4002:4002"

  postgres-chats:
    image: postgres:latest
    container_name: postgres-chats
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: findit_chat
    ports:
      - "35432:5432"
    volumes:
      - ./data/pgdata_chats:/var/lib/postgresql/data
    networks:
      - production-network

  ms-chats:
    build: ./ms-chats
    entrypoint: ./.docker/entrypoint.sh
    container_name: ms-chats
    depends_on:
      - postgres-chats
    restart: always
    networks:
      - production-network
    ports:
      - "4004:4004"

  ms-emails:
    build: ./ms-emails
    entrypoint: ./.docker/entrypoint.sh
    container_name: ms-emails
    restart: always
    networks:
      - production-network
    ports:
      - "4003:4003"

networks:
  production-network:
    driver: bridge
